{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","actual","setState","console","info","toUTCString","slice","clearInterval","className","props","name","Component","getRandomName","value","now","toString","App","clockName","visibleClock","randomNameId","hideClock","ev","preventDefault","showClock","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAS,IAAIL,KAEnB,EAAKM,SAAS,CACZP,KAAMM,MAEP,OAdP,gCAiBE,WAEEE,QAAQC,KAAKN,KAAKJ,MAAMC,KAAKU,cAAcC,OAAO,IAAK,MAnB3D,kCAsBE,WACEP,OAAOQ,cAAcT,KAAKD,WAvB9B,oBA0BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,KAAKW,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACGb,EAAKU,cAAcC,OAAO,IAAK,YAtC1C,GAA2BK,aCD3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWT,OAAO,GAE3C,MAAM,SAAN,OAAgBO,GAGX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAW,UACXC,cAAc,GAHlB,EAMEC,aAAe,EANjB,EAiCEC,UAAY,SAACC,GACPA,GACFA,EAAGC,iBAGL,EAAKpB,SAAS,CACZgB,cAAc,KAvCpB,EA2CEK,UAAY,WACV,EAAKrB,SAAS,CACZgB,cAAc,KA7CpB,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe3B,KAAKsB,WAAW,GACzDI,SAASC,iBAAiB,QAAS3B,KAAKyB,WAAW,GACnDzB,KAAKqB,aAAepB,OAAOC,aAAY,WACrC,EAAKE,SAAS,CACZe,UAAWL,QAEZ,QAfP,gCAkBE,SAAmBc,EAAgBC,GAC7BA,EAAUV,YACRnB,KAAKJ,MAAMuB,WACZnB,KAAKJ,MAAMwB,cAEdf,QAAQyB,MAAR,uBAA8BD,EAAUV,UAAxC,eAAwDnB,KAAKJ,MAAMuB,cAvBzE,kCA2BE,WACElB,OAAOQ,cAAcT,KAAKqB,cAC1BK,SAASK,oBAAoB,cAAe/B,KAAKsB,WAAW,GAC5DI,SAASK,oBAAoB,QAAS/B,KAAKyB,WAAW,KA9B1D,oBAiDE,WACE,OACE,sBAAKf,UAAU,MAAf,UACE,6CACCV,KAAKJ,MAAMwB,cAAgB,cAAC,EAAD,CAAOR,KAAMZ,KAAKJ,MAAMuB,mBArD5D,GAAyBN,aCZzBmB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.54fcf9c1.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  time: Date;\n};\n\ntype Name = {\n  name: string;\n};\n\nexport class Clock extends Component<Name, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const actual = new Date();\n\n      this.setState({\n        time: actual,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate() {\n    // eslint-disable-next-line no-console\n    console.info(this.state.time.toUTCString().slice(-12, -4));\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\ntype State = {\n  clockName: string,\n  visibleClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    visibleClock: true,\n  };\n\n  randomNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock, true);\n    document.addEventListener('click', this.showClock, true);\n    this.randomNameId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: Readonly<State>) {\n    if (prevState.clockName\n      !== this.state.clockName\n      && this.state.visibleClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.randomNameId);\n    document.removeEventListener('contextmenu', this.hideClock, true);\n    document.removeEventListener('click', this.showClock, true);\n  }\n\n  hideClock = (ev: Event) => {\n    if (ev) {\n      ev.preventDefault();\n    }\n\n    this.setState({\n      visibleClock: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      visibleClock: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.visibleClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}